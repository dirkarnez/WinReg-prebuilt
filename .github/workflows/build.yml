name: winreg-prebuilt-release-actions-workflow
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Create Release
    runs-on: windows-latest
    env:
      msvc2019TargetZip: WinReg-${{ github.ref_name }}-msvc2019.zip
    steps:
      - name: git clone WinReg
        run: git clone --branch v4.1.2 https://github.com/GiovanniDicanio/WinReg.git
      
      - name: try aria2 
        shell: cmd
        run: aria2c "https://github.com/dirkarnez/xml-direct-modifier/releases/download/v1.0.0/xml-direct-modifier-v1.0.0.zip"  && 7z.exe x xml-direct-modifier-v1.0.0.zip
        
      - name: modify WinReg/WinReg/WinReg.vcxproj 
        shell: cmd
        run: xml-direct-modifier.exe --source=WinReg/WinReg/WinReg.vcxproj --target=WinReg/WinReg/WinReg-patched.vcxproj --mode=innertext --xpath=Project/PropertyGroup/ConfigurationType --value=StaticLibrary
        
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64

      - name: Build app for release
        run: msbuild WinReg\WinReg\WinReg-patched.vcxproj -t:rebuild -property:Configuration=Release

      - name: check
        shell: cmd
        run: cd WinReg\WinReg\Release && dir
        
      - name: Prepare release
        shell: cmd
        run: md distribution && copy WinReg\WinReg\Release\WinReg-patched.lib distribution && ren "distribution\WinReg-patched.lib" "WinReg.lib" && copy WinReg\WinReg\WinReg.hpp distribution

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          path: distribution
          filename: "${{ env.msvc2019TargetZip }}"
          
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ env.msvc2019TargetZip }}"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
        
        
        
